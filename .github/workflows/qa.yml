name: Quality Assurance
on: [push, pull_request]
jobs:
  assure-quality:
    strategy:
      matrix:
        PSVer: [pwsh, powershell]
    defaults:
      run:
        shell: ${{ matrix.PSVer }}
    name: Assure Quality - ${{ matrix.PSVer }}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      # Cache modules
      - name: üíª Set required PowerShell modules
        id: psmodulecache
        uses: potatoqualitee/psmodulecache@v1
        with:
          modules-to-cache: PSFramework
      - name: üß∞ Setup PowerShell module cache
        id: cacher
        uses: actions/cache@v2
        with:
          path: ${{ steps.psmodulecache.outputs.modulepath }}
          key: ${{ steps.psmodulecache.outputs.keygen }}
      - name: ü§© Install required PowerShell modules
        if: steps.cacher.outputs.cache-hit != 'true'
        run: |
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module ${{ steps.psmodulecache.outputs.needed }} -ErrorAction Stop

      - name: üëç Invoke PSScriptAnalyzer
        run: |
          ./tests/_pssa.ps1

      - name: üß∞ Setup PowerShell module cache - Pester
        id: cacher-pester
        uses: actions/cache@v2
        with:
          path: C:\Program Files\WindowsPowerShell\Modules\Pester
          key: Win32NT-${{ matrix.PSVer }}-PSFramework-4.10.1
      - name: ‚è¨ Install older Pester version
        if: steps.cacher-pester.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          Install-Module -Name Pester -Force -SkipPublisherCheck -Scope AllUsers -RequiredVersion 4.10.1 -ErrorAction Stop

      - name: ‚úÖ Invoke Pester
        run: |
          Import-Module -Name Pester -RequiredVersion 4.10.1
          ./tests/_pester.ps1
